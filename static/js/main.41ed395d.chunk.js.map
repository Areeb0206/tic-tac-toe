{"version":3,"sources":["Tictactoe/Tictactoe.js","App.js","reportWebVitals.js","index.js"],"names":["Tictactoe","props","state","game","Array","fill","player","wincases","i","length","a","b","c","this","alert","index","newgame","newplayer","setState","winner","console","log","Box","map","box","className","onClick","handleClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA+GeA,E,kDA1Gd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAEFC,KAAKC,MAAM,GAAGC,KAAK,MACnBC,OAAO,KALD,E,0CAWnB,WAcC,IAbA,IAAIC,EAAS,CAEZ,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,MAIFC,EAAE,EAAEA,EAAED,EAASE,OAAOD,IAAI,CAAC,IAAD,cAEnBD,EAASC,GAFU,GAE1BE,EAF0B,KAExBC,EAFwB,KAEtBC,EAFsB,KAI9BC,KAAKX,MAAMC,KAAKO,IAAMG,KAAKX,MAAMC,KAAKO,KAAOG,KAAKX,MAAMC,KAAKQ,IAAME,KAAKX,MAAMC,KAAKO,KAAKG,KAAKX,MAAMC,KAAKS,IAC1GE,MAAM,c,yBAOR,SAAYC,GAET,IAAIC,EAAQH,KAAKX,MAAMC,KAEvB,GAAuB,OAAnBa,EAAQD,GAAiB,CAC1BC,EAAQD,GAAOF,KAAKX,MAAMI,OAE7B,IAAIW,EAAgC,MAAtBJ,KAAKX,MAAMI,OAAiB,IAAM,IAEhDO,KAAKK,SAAS,CACXf,KAAKa,EACLV,OAAOW,IAMVJ,KAAKM,SAEPC,QAAQC,IAAIR,KAAKX,MAAMC,Q,oBAIzB,WACC,IAAD,OACMmB,EAAMT,KAAKX,MAAMC,KAAKoB,KAEnB,SAACC,EAAIT,GAAL,OAEJ,qBAAKU,UAAU,MAAkBC,QAAS,kBAEzC,EAAKC,YAAYZ,IAFlB,SAIC,4BAAIS,KAJqBT,MAM7B,OACE,8BAEK,sBAAKU,UAAU,cAAf,UAGG,qBAAKA,UAAU,UAAf,yBAIA,qBAAKA,UAAU,WAAf,SAIIH,a,GAxFQM,aCSTC,MATf,WACE,OACE,8BAEC,cAAC,EAAD,OCKUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41ed395d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Tictactoe.css';\r\n\r\nclass Tictactoe extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\r\n             game:Array(9).fill(null),\r\n             player:\"x\"\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\nwinner(){\r\n\tlet wincases=[\r\n\r\n\t\t[\"0\",\"1\",\"2\"],\r\n\t\t[\"3\",\"4\",\"5\"],\r\n\t\t[\"6\",\"7\",\"8\"],\r\n\t\t[\"0\",\"3\",\"6\"],\r\n\t\t[\"1\",\"4\",\"7\"],\r\n\t\t[\"2\",\"5\",\"8\"],\r\n\t\t[\"0\",\"4\",\"8\"],\r\n\t\t[\"2\",\"4\",\"6\"]\r\n\t]\r\n\r\n\r\n\tfor(let i=0;i<wincases.length;i++){\r\n\r\n\t\tconst [a,b,c]=wincases[i];\r\n\r\n\t\tif(this.state.game[a] && this.state.game[a] === this.state.game[b] && this.state.game[a]===this.state.game[c]){\r\n\t\t\talert(\"you won\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n handleClick(index){\r\n\r\n    let newgame=this.state.game\r\n\r\n    if( newgame[index] === null ){\r\n    \t  newgame[index]=this.state.player\r\n\r\n    let newplayer=this.state.player === \"x\" ? \"o\" : \"x\"\r\n\r\n    this.setState({\r\n       game:newgame,\r\n       player:newplayer\r\n    })\r\n\r\n    }\r\n      \r\n  \r\n    this.winner()\r\n\r\n \tconsole.log(this.state.game)\r\n\r\n }\r\n\r\nrender()\r\n{\r\nconst Box = this.state.game.map\r\n\r\n        ((box,index) => \r\n\r\n    \t<div className=\"box\" key={index} onClick={() =>\r\n\r\n    \t this.handleClick(index)}>\r\n\r\n    \t <p>{box}</p></div>)\r\n\r\n  return (\r\n    <div>\r\n    \r\n         <div className=\"tic-tac-toe\">\r\n\r\n\r\n            <div className=\"heading\">tic-tac-toe</div>\r\n\r\n\r\n\r\n            <div className=\"game-box\">\r\n\r\n\r\n\r\n               {Box}\r\n                \r\n\r\n            </div>\r\n\r\n                \r\n\r\n\r\n\r\n\r\n         </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default Tictactoe;\r\n\r\n\r\n","import React from 'react';\nimport Tictactoe from './Tictactoe/Tictactoe'\n\nfunction App() {\n  return (\n    <div>\n    \n     <Tictactoe />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}